-- Database: covid

-- DROP DATABASE IF EXISTS covid;

CREATE DATABASE covid
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

-- Table: public.country

-- DROP TABLE IF EXISTS public.country;

CREATE TABLE IF NOT EXISTS public.country
(
    country_id integer NOT NULL,
    country_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    country_code character varying(20) COLLATE pg_catalog."default",
    continent character varying(10) COLLATE pg_catalog."default",
    population bigint,
    convert_name character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT country_pkey PRIMARY KEY (country_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.country
    OWNER to postgres;


-- Table: public.source

-- DROP TABLE IF EXISTS public.source;

CREATE TABLE IF NOT EXISTS public.source
(
    source_id bigint NOT NULL,
    source_name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT source_pkey PRIMARY KEY (source_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.source
    OWNER to postgres;


-- Table: public.day

-- DROP TABLE IF EXISTS public.day;

CREATE TABLE IF NOT EXISTS public.day
(
    day_id integer NOT NULL,
    day_name character(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT day_pkey PRIMARY KEY (day_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.day
    OWNER to postgres;


-- Table: public.month

-- DROP TABLE IF EXISTS public.month;

CREATE TABLE IF NOT EXISTS public.month
(
    month_id integer NOT NULL,
    month_name character(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT month_pkey PRIMARY KEY (month_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.month
    OWNER to postgres;


-- Table: public.time

-- DROP TABLE IF EXISTS public."time";

CREATE TABLE IF NOT EXISTS public."time"
(
    time_id integer NOT NULL,
    date date NOT NULL,
    day integer NOT NULL,
    month integer NOT NULL,
    year integer NOT NULL,
    week integer NOT NULL,
    day_of_week integer NOT NULL,
    CONSTRAINT time_pkey PRIMARY KEY (time_id),
    CONSTRAINT time_day_of_week_fkey FOREIGN KEY (day_of_week)
        REFERENCES public.day (day_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT time_month_fkey FOREIGN KEY (month)
        REFERENCES public.month (month_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."time"
    OWNER to postgres;


-- Table: public.country_testing_policy

-- DROP TABLE IF EXISTS public.country_testing_policy;

CREATE TABLE IF NOT EXISTS public.country_testing_policy
(
    country_id integer,
    time_id integer,
    value "char",
    CONSTRAINT country_testing_policy_country_id_fkey FOREIGN KEY (country_id)
        REFERENCES public.country (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT country_testing_policy_time_id_fkey FOREIGN KEY (time_id)
        REFERENCES public."time" (time_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.country_testing_policy
    OWNER to postgres;


-- Table: public.country_health_index

-- DROP TABLE IF EXISTS public.country_health_index;

CREATE TABLE IF NOT EXISTS public.country_health_index
(
    country_id integer,
    time_id integer,
    value double precision,
    CONSTRAINT country_health_index_country_id_fkey FOREIGN KEY (country_id)
        REFERENCES public.country (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT country_health_index_time_id_fkey FOREIGN KEY (time_id)
        REFERENCES public."time" (time_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.country_health_index
    OWNER to postgres;


-- Table: public.measurement

-- DROP TABLE IF EXISTS public.measurement;

CREATE TABLE IF NOT EXISTS public.measurement
(
    country_id integer,
    time_id integer,
    measure_value character varying(100) COLLATE pg_catalog."default",
    note character varying(100) COLLATE pg_catalog."default",
    category character varying(50) COLLATE pg_catalog."default",
    source_id integer,
    CONSTRAINT measurement_country_id_fkey FOREIGN KEY (country_id)
        REFERENCES public.country (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT measurement_source_id_fkey FOREIGN KEY (source_id)
        REFERENCES public.source (source_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT measurement_time_id_fkey FOREIGN KEY (time_id)
        REFERENCES public."time" (time_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.measurement
    OWNER to postgres;


-- Table: public.data

-- DROP TABLE IF EXISTS public.data;

CREATE TABLE IF NOT EXISTS public.data
(
    time_id integer,
    country_id integer,
    cases integer,
    deaths integer,
    recovered integer,
    cumulate_cases bigint,
    cumulate_deaths bigint,
    cumulate_recovered bigint,
    source_id integer,
    CONSTRAINT data_country_id_fkey FOREIGN KEY (country_id)
        REFERENCES public.country (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT data_source_id_fkey FOREIGN KEY (source_id)
        REFERENCES public.source (source_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT data_time_id_fkey FOREIGN KEY (time_id)
        REFERENCES public."time" (time_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.data
    OWNER to postgres;